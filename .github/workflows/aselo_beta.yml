# This is a basic workflow to publish a Twilio Flex-plugins with Github Actions

name: Aselo Beta release

# Controls when the action will run.
on:
  workflow_dispatch:
    inputs:
      changelog:
        description: Release Changelog - Add a comment about the changes to be included in this release.
        required: true
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      # Setup credentials to access AWS for parameters
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # Get AWS parameters
      - name: Set Datadog Application ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "PROD_DATADOG_AS_APP_ID"
          env_variable_name: "PROD_DATADOG_AS_APP_ID"
      - name: Set Datadog Client Access token
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "PROD_DATADOG_AS_ACCESS_TOKEN"
          env_variable_name: "PROD_DATADOG_AS_ACCESS_TOKEN"
      - name: Set Rollbar Client Access token
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ROLLBAR_ACCESS_TOKEN"
          env_variable_name: "ROLLBAR_ACCESS_TOKEN"           
      # Create temporal files for the release
      - name: Create appConfig.js
        run: cp ./public/appConfig.example.js ./public/appConfig.js
        working-directory: ./plugin-hrm-form
      - name: Replace Twilio account SID in appConfig.js
        uses: falnyr/replace-env-vars-action@master
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.AS_BETA_ACCOUNT_SID }}
        with:
          filename: ./plugin-hrm-form/public/appConfig.js
      - name: Create secret.js
        run: |
          mkdir ./src/private
          touch ./src/private/secret.js
        working-directory: ./plugin-hrm-form
      - name: Fill secret.js
        run: |
          cat <<EOT >> ./src/private/secret.js
          export const rollbarAccessToken = '$ROLLBAR_ACCESS_TOKEN';
          export const datadogAccessToken = '$PROD_DATADOG_AS_ACCESS_TOKEN';
          export const datadogApplicationID = '$PROD_DATADOG_AS_APP_ID';
          EOT
        working-directory: ./plugin-hrm-form
      # Runs a single command using the runners shell  
      - name: Install dependencies for the flex-plugins
        run: UNBUNDLED_REACT=true npm install
        working-directory: ./plugin-hrm-form
      # Install the Twilio CLI and the flex plugin, then deploy the plugin
      - name: Install twilio cli and run deploy command
        env:
         TWILIO_ACCOUNT_SID: ${{ secrets.AS_BETA_ACCOUNT_SID }}
         TWILIO_AUTH_TOKEN: ${{ secrets.AS_BETA_AUTH_TOKEN }}
         UNBUNDLED_REACT: true
        run: npm install twilio-cli -g && twilio plugins:install @twilio-labs/plugin-flex && twilio flex:plugins:deploy --changelog "${{ github.event.inputs.changelog }} (commit ${{ github.sha }})"
        working-directory: ./plugin-hrm-form
      # Release flex plugin
      - name: Run release command
        env:
         TWILIO_ACCOUNT_SID: ${{ secrets.AS_BETA_ACCOUNT_SID }}
         TWILIO_AUTH_TOKEN: ${{ secrets.AS_BETA_AUTH_TOKEN }}
        run: twilio flex:plugins:release --plugin plugin-hrm-form@latest
        working-directory: ./plugin-hrm-form
