name: 'Generate production release'
description: 'Given a QA pre release tag, will generate production ready release for the tagged version'
inputs:
  title:
    description: Release title - The title that will be given to this pre-release.
    required: true
  ref_name:
    description: The qa tag name from which to cut ths release.
    required: true
  repository:
    required: true
    description: The github repo to compare tags against. Tipically github.repository.
  repo_token: 
    description: A GitHub token to access the repo. Tipically secrets.GITHUB_TOKEN.
    required: true
outputs:
  generated-release-tag:
    description: "The generated release tag"
    value: ${{ steps.create_release.outputs.id }}

runs:
  using: "composite"
  steps:
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    # Get release tag
    - name: Get release tag
      run: npm run get-release-tag
      env:
        REF: ${{ inputs.ref_name }}
      working-directory: ${{ github.action_path }}
      shell: bash
      id: get_release_tag

    - run: echo ${{ steps.get_release_tag.outputs.generated-tag }}
      shell: bash

    - name: "Check release notes file exists"
      uses: andstor/file-existence-action@v2.0.0
      with:
        files: "release-notes/${{ steps.get_release_tag.outputs.generated-tag }}.md"
        fail: true

    # Create a release
    - name: Create a release
      uses: ncipollo/release-action@v1.12.0
      with:
        commit: ${{ github.sha }}
        tag: ${{ steps.get_release_tag.outputs.generated-tag }}
        name: ${{ inputs.title }}
        bodyFile: "release-notes/${{ steps.get_release_tag.outputs.generated-tag }}.md"
        prerelease: false
        # allowUpdates: true ## do we want to allow "updates" to a release?
      id: create_release
