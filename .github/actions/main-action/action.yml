# Copyright (C) 2021-2023 Technology Matters
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/.

name: 'main-action'
description: 'Publish Twilio Flex-Plugins'
inputs:
  account-sid:
    description: 'Twilio Account SID'
    required: true
  auth-token:
    description: 'Twilio Token'
    required: true
  aws-access-key-id:
    description: 'AWS credentials for Aselo user'
    required: true
  aws-secret-access-key:
    description: 'AWS credentials for Aselo user'
    required: true
  aws-region:
    description: 'AWS region where Aselo documents bucket is hosted'
    required: true
  helpline-id:
    description: 'Identifies the helpline / environment for slack message'
    default: '??'
  helpline_code:
    description: 'Identifies the helpline / environment for slack message'
    default: '??'
  environment:
    description: 'Identifies the environment for slack message'
    default: '??'
  send-slack-message:
    description: 'Specifies if should send a Slack message at the end of successful run. Defaults to true'
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
      # Setup credentials to access AWS for parameters
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ inputs.aws-access-key-id }}
          aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
      # Get AWS parameters
      - name: Set Datadog Application ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "DEV_DATADOG_AS_APP_ID"
          env_variable_name: "DATADOG_APP_ID"
      - name: Set Datadog Client Access token
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "DEV_DATADOG_AS_ACCESS_TOKEN"
          env_variable_name: "DATADOG_ACCESS_TOKEN"
      - name: Set Fullstory org id
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "FULLSTORY_ID"
          env_variable_name: "FULLSTORY_ID"
      - name: Set GITHUB_ACTIONS_SLACK_BOT_TOKEN
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "GITHUB_ACTIONS_SLACK_BOT_TOKEN"
          env_variable_name: "GITHUB_ACTIONS_SLACK_BOT_TOKEN"
      - name: Set ASELO_DEPLOYS_CHANNEL_ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ASELO_DEPLOYS_CHANNEL_ID"
          env_variable_name: "ASELO_DEPLOYS_CHANNEL_ID"

      # Create temporal files for the release
      - name: Create appConfig.js
        run: cp ./public/appConfig.template.deploy.js ./public/appConfig.js
        working-directory: ./plugin-hrm-form
        shell: bash
      - name: Replace Twilio account SID in appConfig.js
        uses: falnyr/replace-env-vars-action@master
        env:
          TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
        with:
          filename: ./plugin-hrm-form/public/appConfig.js
      - name: Create secret.js
        run: |
          touch ./src/private/secret.js
        working-directory: ./plugin-hrm-form
        shell: bash
      - name: Fill secret.js
        run: |
          cat <<EOT >> ./src/private/secret.js
          export const datadogAccessToken = '$DATADOG_ACCESS_TOKEN';
          export const datadogApplicationID = '$DATADOG_APP_ID';
          export const fullStoryId = '$FULLSTORY_ID';
          EOT
        working-directory: ./plugin-hrm-form
        shell: bash
      # Install the Twilio CLI and the flex plugin, then deploy the plugin
      - name: Install Twilio CLI
        run: npm install twilio-cli@5.20.1 -g && twilio plugins:install @twilio-labs/plugin-flex@7.0.0
        working-directory: ./plugin-hrm-form
        shell: bash
      # Runs a single command using the runners shell
      - name: Install dependencies for the flex-plugins
        run: npm ci
        working-directory: ./plugin-hrm-form
        shell: bash
      # Release flex plugin
      - name: Run deploy command
        env:
          TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
          TWILIO_AUTH_TOKEN: ${{ inputs.auth-token }}
        run: twilio flex:plugins:deploy --bypass-validation --changelog "commit ${{ github.sha }}"
        working-directory: ./plugin-hrm-form
        shell: bash
      # Release flex plugin
      - name: Run release command
        env:
         TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
         TWILIO_AUTH_TOKEN: ${{ inputs.auth-token }}
        run: twilio flex:plugins:release --plugin plugin-hrm-form@latest
        working-directory: ./plugin-hrm-form
        shell: bash
      # Update Flex UI Version
      - name: Update UI Version
        run: npm run update-flex-ui-version
        env:
          TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
          TWILIO_AUTH_TOKEN: ${{ inputs.auth-token }}
        working-directory: ./plugin-hrm-form
        shell: bash
      # Send Slack notifying success
      - name: Slack Aselo channel
        id: slack
        uses: slackapi/slack-github-action@v1.14.0
        if: ${{ inputs.send-slack-message != 'false' }}
        with:
          channel-id: ${{ env.ASELO_DEPLOYS_CHANNEL_ID }}
          slack-message: "`[FLEX]` Deployment to `${{ inputs.helpline-id }}` of ${{ github.ref_type }} `${{ github.ref_name }}` requested by `${{ github.triggering_actor }}` completed using workflow '${{ github.workflow }}' with SHA ${{ github.sha }} :rocket:."
        env:
          SLACK_BOT_TOKEN: ${{ env.GITHUB_ACTIONS_SLACK_BOT_TOKEN }}

      # Update deployment matrix with script and ssm parameters
      - name: Update deployment matrix
        uses: ./.github/actions/deployment-matrix
        with:
          aws-access-key-id: ${{ inputs.aws-access-key-id }}
          aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}
          identifier: ${{ inputs.helpline_code }}
          environment: ${{ inputs.environment}}
          service_repo: 'flex-plugins'
          version_tag: ${{ github.ref_name }}