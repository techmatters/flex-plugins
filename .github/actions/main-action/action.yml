name: 'main-action'
description: 'Publish Twilio Flex-Plugins'
inputs:
  account-sid:
    description: 'Twilio Account SID'
    required: true
  auth-token:
    description: 'Twilio Token'
    required: true
runs:
  using: "composite"
  steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      # Setup credentials to access AWS for parameters
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # Get AWS parameters
      - name: Set Datadog Application ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "DEV_DATADOG_AS_APP_ID"
          env_variable_name: "DATADOG_APP_ID"
      - name: Set Datadog Client Access token
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "DEV_DATADOG_AS_ACCESS_TOKEN"
          env_variable_name: "DATADOG_ACCESS_TOKEN"
      - name: Set Rollbar Client Access token
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ROLLBAR_ACCESS_TOKEN"
          env_variable_name: "ROLLBAR_ACCESS_TOKEN" 
      - name: Set Fullstory org id
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "FULLSTORY_ID"
          env_variable_name: "FULLSTORY_ID"
      - name: Set GITHUB_ACTIONS_SLACK_BOT_TOKEN
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "GITHUB_ACTIONS_SLACK_BOT_TOKEN"
          env_variable_name: "GITHUB_ACTIONS_SLACK_BOT_TOKEN"
      - name: Set ASELO_DEPLOYS_CHANNEL_ID
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "ASELO_DEPLOYS_CHANNEL_ID"
          env_variable_name: "ASELO_DEPLOYS_CHANNEL_ID"
      # Create temporal files for the release
      - name: Create appConfig.js
        run: cp ./public/appConfig.example.js ./public/appConfig.js
        working-directory: ./plugin-hrm-form
      - name: Replace Twilio account SID in appConfig.js
        uses: falnyr/replace-env-vars-action@master
        env:
          TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
        with:
          filename: ./plugin-hrm-form/public/appConfig.js
      - name: Create secret.js
        run: |
          mkdir ./src/private
          touch ./src/private/secret.js
        working-directory: ./plugin-hrm-form
      - name: Fill secret.js
        run: |
          cat <<EOT >> ./src/private/secret.js
          export const rollbarAccessToken = '$ROLLBAR_ACCESS_TOKEN';
          export const datadogAccessToken = '$DATADOG_ACCESS_TOKEN';
          export const datadogApplicationID = '$DATADOG_APP_ID';
          export const fullStoryId = '$FULLSTORY_ID';
          EOT
        working-directory: ./plugin-hrm-form
      # Runs a single command using the runners shell  
      - name: Install dependencies for the flex-plugins
        run: UNBUNDLED_REACT=true npm install
        working-directory: ./plugin-hrm-form
      # Install the Twilio CLI and the flex plugin, then deploy the plugin
      - name: Install twilio cli and run deploy command
        env:
         TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
         TWILIO_AUTH_TOKEN: ${{ inputs.auth-token }}
         UNBUNDLED_REACT: true
        run: npm install twilio-cli -g && twilio plugins:install @twilio-labs/plugin-flex && twilio flex:plugins:deploy --changelog "${{ github.event.inputs.changelog }} (commit ${{ github.sha }})"
        working-directory: ./plugin-hrm-form
      # Release flex plugin
      - name: Run release command
        env:
         TWILIO_ACCOUNT_SID: ${{ inputs.account-sid }}
         TWILIO_AUTH_TOKEN: ${{ inputs.auth-token }}
        run: twilio flex:plugins:release --plugin plugin-hrm-form@latest
        working-directory: ./plugin-hrm-form
      # Send Slack notifying success
      - name: Slack Aselo channel
        id: slack
        uses: slackapi/slack-github-action@v1.14.0
        with:
          channel-id: ${{ env.ASELO_DEPLOYS_CHANNEL_ID }}
          slack-message: "`[FLEX]` Action ${{ github.workflow }} completed with SHA ${{ github.sha }}. Changelog is: ${{ github.event.inputs.changelog }} :rocket:."
        env:
          SLACK_BOT_TOKEN: ${{ env.GITHUB_ACTIONS_SLACK_BOT_TOKEN }}
      