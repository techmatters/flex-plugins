${
  jsonencode(
    {
      "states": [
      {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "getProfileFlagsForIdentifier",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": -160,
          "y": -460
        }
      }
    },
    {
      "name": "getProfileFlagsForIdentifier",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "contact_routing",
          "event": "success"
        },
        {
          "next": "attributes",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -350,
          "y": -280
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{ \"trigger\": {{trigger | to_json}}}",
        "url": "${serverless_url}/getProfileFlagsForIdentifier"
      }
    },
     {
      "name": "send_blocked_message",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": serverless_service_sid,
        "environment_sid": serverless_environment_sid,
        "offset": {
          "x": -640,
          "y": 210
        },
        "function_sid": flow_vars["send_message_janitor_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": flow_vars["chat_blocked_message"],
            "key": "message"
          },
          {
            "value": flow_vars["widget_from"],
            "key": "from"
          }
        ],
        "url": "${serverless_url}/sendMessageAndRunJanitor"
      }
    },
    {
      "name": "contact_routing",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "attributes",
          "event": "noMatch"
        },
        {
          "next": "send_blocked_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value contains blocked",
              "arguments": [
                "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}"
              ],
              "type": "contains",
              "value": "blocked"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}",
        "offset": {
          "x": -690,
          "y": -60
        }
      }
    },
      {
        "transitions": [
          {
            "event": "callComplete"
          },
          {
            "next": "webhook_notify_failed_to_enqueue",
            "event": "failedToEnqueue"
          },
          {
            "event": "callFailure"
          }
        ],
        "type": "send-to-flex",
        "name": "attributes",
        "properties": {
          "attributes": channel_attributes["default"],
          "workflow":  workflow_sids["master"],
          "channel": task_channel_sids["chat"],
          "offset": {
            "y": 250,
            "x": 80
          }
        }
      },
    {
        "name": "webhook_notify_failed_to_enqueue",
        "type": "make-http-request",
        "transitions": [
          {
            "event": "success"
          },
          {
            "event": "failed"
          }
        ],
        "properties": {
          "offset": {
            "x": 540,
            "y": 1250
          },
          "method": "POST",
          "content_type": "application/json;charset=utf-8",
          "body": "{ \"text\": \"Issue detected [Failed to Enqueue] on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
          "add_twilio_auth": false,
          "url": webhook_url_studio_errors
        }
      } 
      ],
      "initial_state": "Trigger",
      "flags": {
        "allow_concurrent_calls": true
      },
      "description": flow_description
    }
    )
  }
