${
  jsonencode(
{
  "description": "988 CAMH Flow",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "event": "incomingMessage"
        },
        {
          "next": "run_subflow_system_down",
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": 0,
          "y": 0
        }
      }
    },
    {
      "name": "send_to_Q988En",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -100,
          "y": 500
        },
        "workflow": workflow_sids["master"],
        "channel": task_channel_sids["voice"],
        "waitUrl": channel_flow_vars["en_function_url"],
        "waitUrlMethod": "GET"
        "attributes": "{\"language\": \"en-CA\",\n\"type\": \"inbound\", \"name\": \"{{trigger.call.From}}\",\"ignoreAgent\":\"\", \"transferTargetType\":\"\",\"channelType\":\"voice\", \"conversations\": {\"ivr_path\" : \"988 English\", \"hang_up_by\": \"Customer\"}}"
      }
    },
    {
      "name": "send_to_Q988Fr",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 290,
          "y": 460
        },
        "workflow": workflow_sids["master"],
        "waitUrl": channel_flow_vars["fr_function_url"],
        "channel": task_channel_sids["voice"],
        "attributes": "{\"language\": \"fr-CA\",\n\"type\": \"inbound\", \"name\": \"{{trigger.call.From}}\",\"ignoreAgent\":\"\", \"transferTargetType\":\"\",\"channelType\":\"voice\", \"conversations\": {\"ivr_path\" : \"988 French\", \"hang_up_by\": \"Customer\"}}",
        "waitUrlMethod": "GET"
      }
    },
    {
      "name": "split_keys_lang",
      "type": "split-based-on",
      "transitions": [
        {
          "event": "noMatch"
        },
        {
          "next": "f_check_counsellors",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value contains 988_en",
              "arguments": [
                "{{trigger.call.To}}"
              ],
              "type": "contains",
              "value": channel_flow_vars["en_number"]
            }
          ]
        },
        {
          "next": "f_check_counsellors_fr",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value contains 988_ns_fr",
              "arguments": [
                "{{trigger.call.To}}"
              ],
              "type": "contains",
              "value": channel_flow_vars["ns_fr_number"]
            }
          ]
        },
        {
          "next": "f_check_counsellors_fr",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value contains 988_fr",
              "arguments": [
                "{{trigger.call.To}}"
              ],
              "type": "contains",
              "value": channel_flow_vars["fr_number"]
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.call.To}}",
        "offset": {
          "x": 110,
          "y": 150
        }
      }
    },
    {
      "name": "run_subflow_system_down",
      "type": "run-subflow",
      "transitions": [
        {
          "next": "split_keys_lang",
          "event": "completed"
        },
        {
          "next": "split_keys_lang",
          "event": "failed"
        }
      ],
      "properties": {
        "flow_sid": "${system_down_studio_subflow_sid}",
        "flow_revision": "LatestPublished",
        "offset": {
          "x": 110,
          "y": -270
        },
        "parameters": [
          {
            "type": "string",
            "value": "true",
            "key": "system_down"
          }
        ]
      }
    },
{
      "name": "forward_call_camh",
      "type": "connect-call-to",
      "transitions": [
        {
          "event": "callCompleted"
        },
        {
          "event": "hangup"
        }
      ],
      "properties": {
        "offset": {
          "x": -160,
          "y": 760
        },
        "caller_id": "{{contact.channel.address}}",
        "noun": "number",
        "to": channel_flow_vars["redirect_number"],
        "timeout": 30
      }
    },
   {
      "name": "f_check_counsellors",
      "type": "run-function",
      "transitions": [
        {
          "next": "split_available_counsellors",
          "event": "success"
        },
        {
          "next": "send_to_Q988En",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "${flow_vars.service_sid}",
        "environment_sid": "${flow_vars.environment_sid}",
        "offset": {
          "x": 1560,
          "y": -200
        },
        "function_sid": "${flow_vars.check_counsellors_function_sid}",
        "parameters": [
          {
            "value": "${flow_vars.workspace_sid}",
            "key": "workspaceSid"
          },
          {
            "value": channel_flow_vars["988_english_queue_sid"],
            "key": "taskQueueSid"
          }
        ],
        "url": "${flow_vars.check_counsellors_function_url}"
      }
    },
    {
      "name": "split_available_counsellors",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "forward_call_camh",
          "event": "noMatch"
        },
        {
          "next": "send_to_Q988En",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value greater_than 0",
              "arguments": [
                "{{widgets.f_check_counsellors.parsed.totalCounsellors}}"
              ],
              "type": "greater_than",
              "value": "0"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.f_check_counsellors.parsed.totalCounsellors}}",
        "offset": {
          "x": -440,
          "y": 470
        }
      }
    },
    {
      "name": "f_check_counsellors_fr",
      "type": "run-function",
      "transitions": [
        {
          "next": "split_available_counsellors_fr",
          "event": "success"
        },
        {
          "next": "send_to_Q988Fr",
          "event": "fail"
        }
      ],
        "service_sid": "${flow_vars.service_sid}",
        "environment_sid": "${flow_vars.environment_sid}",
        "offset": {
          "x": 1560,
          "y": -200
        },
        "function_sid": "${flow_vars.check_counsellors_function_sid}",
        "parameters": [
          {
            "value": "${flow_vars.workspace_sid}",
            "key": "workspaceSid"
          },
          {
            "value": channel_flow_vars["988_french_queue_sid"],
            "key": "taskQueueSid"
          }
        ],
        "url": "${flow_vars.check_counsellors_function_url}"
      }
    },
    {
      "name": "split_available_counsellors_fr",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "forward_call_camh",
          "event": "noMatch"
        },
        {
          "next": "send_to_Q988Fr",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value greater_than 0",
              "arguments": [
                "{{widgets.f_check_counsellors_fr.parsed.totalCounsellors}}"
              ],
              "type": "greater_than",
              "value": "0"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.f_check_counsellors_fr.parsed.totalCounsellors}}",
        "offset": {
          "x": 250,
          "y": 520
        }
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}  
)
}
