${
  jsonencode( {
  "description": "Messaging Flow - Lex - MT",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "split_web",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": -250,
          "y": -200
        }
      }
    },
    {
      "name": "attributes",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 1410,
          "y": 1380
        },
        "workflow": workflow_sids["master"],
        "channel": task_channel_sids["chat"],
        "attributes": "{\n  \"name\": \"{{trigger.message.ChannelAttributes.from}}\",\n  \"channelType\": \"{{trigger.message.ChannelAttributes.channel_type}}\",\n  \"channelSid\": \"{{trigger.message.ChannelSid}}\",\n  \"twilioNumber\": \"{{trigger.message.ChannelAttributes.twilioNumber}}\",\n  \"ignoreAgent\": \"\",\n  \"language\":\"{{trigger.message.ChannelAttributes.languageMemory.language  | default: 'en-MT'}}\",\n  \"transferTargetType\": \"\",\n  \"memory\": {{trigger.message.ChannelAttributes.memory | to_json}}\n}"
      }
    },
    {
      "name": "language_selector_complete",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "capture_channel_with_language_bot",
          "event": "noMatch"
        },
        {
          "next": "terms_conditions_complete",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{trigger.message.ChannelAttributes.isSelectLanguageComplete}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.isSelectLanguageComplete}}",
        "offset": {
          "x": -360,
          "y": 190
        }
      }
    },
    {
      "name": "capture_channel_with_language_bot",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channel_cleanup",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -850,
          "y": 570
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_language_selector",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "en-MT",
            "key": "language"
          },
          {
            "value": "language_selector",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "isSelectLanguageComplete",
            "key": "releaseFlag"
          },
          {
            "value": "languageMemory",
            "key": "memoryAttribute"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "pre_survey_complete",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "uk_split_2",
          "event": "noMatch"
        },
        {
          "next": "attributes",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{trigger.message.ChannelAttributes.preSurveyComplete}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.preSurveyComplete}}",
        "offset": {
          "x": 660,
          "y": 1030
        }
      }
    },
    {
      "name": "capture_channel_with_bot",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channel_cleanup",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": 720,
          "y": 1670
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_pre_survey",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "{{trigger.message.ChannelAttributes.languageMemory.language  | default: 'en-MT'}}",
            "key": "language"
          },
          {
            "value": "pre_survey",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "preSurveyComplete",
            "key": "releaseFlag"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "terms_conditions_complete",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "uk_split",
          "event": "noMatch"
        },
        {
          "next": "terms_acceptance",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{trigger.message.ChannelAttributes.isTermsConditionsComplete}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.isTermsConditionsComplete}}",
        "offset": {
          "x": -70,
          "y": 500
        }
      }
    },
    {
      "name": "capture_channel_terms",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channel_cleanup",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -710,
          "y": 990
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_permissions",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "{{trigger.message.ChannelAttributes.languageMemory.language  | default: 'en-MT'}}",
            "key": "language"
          },
          {
            "value": "terms_conditions_acceptance",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "isTermsConditionsComplete",
            "key": "releaseFlag"
          },
          {
            "value": "termsConditionsMemory",
            "key": "memoryAttribute"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "terms_acceptance",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "language_split_terms_no_acceptance",
          "event": "noMatch"
        },
        {
          "next": "pre_survey_complete",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Yes",
              "arguments": [
                "{{trigger.message.ChannelAttributes.termsConditionsMemory.terms_conditions_response}}"
              ],
              "type": "equal_to",
              "value": "Yes"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.termsConditionsMemory.terms_conditions_response}}",
        "offset": {
          "x": 240,
          "y": 780
        }
      }
    },
    {
      "name": "language_split_terms_no_acceptance",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "send_message_run_janitor_en",
          "event": "noMatch"
        },
        {
          "next": "send_message_run_janitor_en",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to en-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.languageMemory.language}}"
              ],
              "type": "equal_to",
              "value": "en-MT"
            }
          ]
        },
        {
          "next": "send_message_run_janitor_mt",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to mt-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.languageMemory.language}}"
              ],
              "type": "equal_to",
              "value": "mt-MT"
            }
          ]
        },
        {
          "next": "send_message_run_janitor_uk",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to ukr-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.languageMemory.language}}"
              ],
              "type": "equal_to",
              "value": "ukr-MT"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.languageMemory.language}}",
        "offset": {
          "x": -30,
          "y": 1110
        }
      }
    },
    {
      "name": "uk_split",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "capture_channel_terms",
          "event": "noMatch"
        },
        {
          "next": "capture_channel_terms_UK",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to ukr-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.languageMemory.language}}"
              ],
              "type": "equal_to",
              "value": "ukr-MT"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.languageMemory.language}}",
        "offset": {
          "x": -240,
          "y": 750
        }
      }
    },
    {
      "name": "capture_channel_terms_UK",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channel_cleanup",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -330,
          "y": 1000
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_permissions",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "uk",
            "key": "language"
          },
          {
            "value": "terms_conditions_acceptance",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "isTermsConditionsComplete",
            "key": "releaseFlag"
          },
          {
            "value": "termsConditionsMemory",
            "key": "memoryAttribute"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "uk_split_2",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "noMatch"
        },
        {
          "next": "capture_channel_with_bot_UK",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to ukr-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.languageMemory.language}}"
              ],
              "type": "equal_to",
              "value": "ukr-MT"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.languageMemory.language}}",
        "offset": {
          "x": 790,
          "y": 1320
        }
      }
    },
    {
      "name": "capture_channel_with_bot_UK",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channel_cleanup",
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": 1070,
          "y": 1670
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_pre_survey",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "uk",
            "key": "language"
          },
          {
            "value": "pre_survey",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "preSurveyComplete",
            "key": "releaseFlag"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "split_web",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "language_selector_complete",
          "event": "noMatch"
        },
        {
          "next": "language_split_web",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to web",
              "arguments": [
                "{{trigger.message.ChannelAttributes.channel_type}}"
              ],
              "type": "equal_to",
              "value": "web"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.channel_type}}",
        "offset": {
          "x": -260,
          "y": -30
        }
      }
    },
    {
      "name": "language_split_web",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "send_message_en_mt",
          "event": "noMatch"
        },
        {
          "next": "send_message_en_mt",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to en-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "en-MT"
            }
          ]
        },
        {
          "next": "send_message_mt_mt",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to mt-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "mt-MT"
            }
          ]
        },
        {
          "next": "send_message_uk",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to ukr-MT",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "ukr-MT"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}",
        "offset": {
          "x": 470,
          "y": 200
        }
      }
    },
    {
      "name": "send_message_en_mt",
      "type": "send-message",
      "transitions": [
        {
          "next": "web_attributes",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 430,
          "y": 480
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Kellimni",
        "to": "{{contact.channel.address}}",
        "body": "We'll transfer you now, please hold for a professional."
      }
    },
    {
      "name": "send_message_mt_mt",
      "type": "send-message",
      "transitions": [
        {
          "next": "web_attributes",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 770,
          "y": 480
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Kellimni",
        "to": "{{contact.channel.address}}",
        "body": "Ha nittrasferuk lil wieħed Proffesjonist/a tagħna.."
      }
    },
    {
      "name": "send_message_uk",
      "type": "send-message",
      "transitions": [
        {
          "next": "web_attributes",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 1120,
          "y": 480
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Kellimni",
        "to": "{{contact.channel.address}}",
        "body": "Ми переведемо вас зараз, будь ласка, чекайте спеціаліста."
      }
    },
    {
      "name": "web_attributes",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 930,
          "y": 790
        },
        "workflow": workflow_sids["master"],
        "channel": task_channel_sids["chat"],
        "attributes": "{\n  \"name\": \"{{trigger.message.ChannelAttributes.from}}\",\n  \"channelType\": \"{{trigger.message.ChannelAttributes.channel_type}}\",\n  \"channelSid\": \"{{trigger.message.ChannelSid}}\",\n  \"twilioNumber\": \"{{trigger.message.ChannelAttributes.twilioNumber}}\",\n  \"ignoreAgent\": \"\",\n  \"language\":\"{{trigger.message.ChannelAttributes.pre_engagement_data.language  | default: 'en-MT'}}\",\n  \"transferTargetType\": \"\",\n \"preEngagementData\": {{trigger.message.ChannelAttributes.pre_engagement_data | to_json}}, \n  \"memory\": {{trigger.message.ChannelAttributes.memory | to_json}}\n}"
      }
    },
    {
      "name": "send_message_run_janitor_en",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -440,
          "y": 1680
        },
        "function_sid": flow_vars["send_message_janitor_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "I'm sorry, if you don't accept our terms and conditions we can't provide counselling to you.",
            "key": "message"
          },
          {
            "value": "Kellimni",
            "key": "from"
          }
        ],
        "url": "${serverless_url}/sendMessageAndRunJanitor"
      }
    },
    {
      "name": "send_message_run_janitor_mt",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -20,
          "y": 1680
        },
        "function_sid": flow_vars["send_message_janitor_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "Jiddispjaċini, ma fhimtx eżatt. Jekk jogħġbok wieġeb b&#39;numru wieħed biss.",
            "key": "message"
          },
          {
            "value": "Kellimni",
            "key": "from"
          }
        ],
        "url": "${serverless_url}/sendMessageAndRunJanitor"
      }
    },
    {
      "name": "send_message_run_janitor_uk",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": 330,
          "y": 1680
        },
        "function_sid": flow_vars["send_message_janitor_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "На жаль, якщо ви не приймете наші умови, ми не зможемо надати вам підтримку.",
            "key": "message"
          },
          {
            "value": "Kellimni",
            "key": "from"
          }
        ],
        "url": "${serverless_url}/sendMessageAndRunJanitor"
      }
    },
    {
        "name": "webhook_notify_error",
        "type": "make-http-request",
        "transitions": [
          {
            "next": "attributes",
            "event": "success"
          },
          {
            "next": "attributes",
            "event": "failed"
          }
        ],
        "properties": {
          "offset": {
            "x": 1100,
            "y": 2050
          },
          "method": "POST",
          "content_type": "application/json;charset=utf-8",
          "body": "{ \"text\": \"Issue detected on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
          "url": webhook_url_studio_errors
        }
      },
        {
            "name": "channel_cleanup",
            "type": "run-function",
            "transitions": [
                {
                "next": "webhook_notify_error",
                "event": "success"
                },
                {
                "next": "webhook_notify_error",
                "event": "fail"
                }
            ],
            "properties": {
                "service_sid": flow_vars["service_sid"],
                "environment_sid": flow_vars["environment_sid"],
                "offset": {
                 "x": -740,
                 "y": 1990
                },
                "function_sid": flow_vars["chatbot_callback_cleanup_function_id"],
                "parameters": [
                {
                    "value": "{{flow.channel.address}}",
                    "key": "channelSid"
                }
                ],
                "url": "${serverless_url}/channelCapture/chatbotCallbackCleanup"
            }
        }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}


  )
}