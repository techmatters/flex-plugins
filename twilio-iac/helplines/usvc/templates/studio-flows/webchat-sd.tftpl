${
  jsonencode({
  "description": "${flow_description}",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "run_subflow_system_down",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": -160,
          "y": -460
        }
      }
    },
    {
      "name": "send_to_queue",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "next": "http_post_notify_failed_to_enqueue",
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": -50,
          "y": 1370
        },
        "workflow": "${workflow_sids.master}",
        "channel": "${task_channel_sids.chat}",
        "attributes": "${channel_attributes.default}"
      }
    },
    {
      "name": "http_post_notify_failed_to_enqueue",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 200,
          "y": 1660
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"text\": \"Issue detected [Failed to Enqueue] on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
        "url": "${webhook_url_studio_errors}"
      }
    },
    {
      "name": "run_subflow_system_down",
      "type": "run-subflow",
      "transitions": [
        {
          "next": "split_safety",
          "event": "completed"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "flow_sid": "${system_down_studio_subflow_sid}",
        "flow_revision": "LatestPublished",
        "offset": {
          "x": 90,
          "y": -140
        }
      }
    },
    {
      "name": "split_safety",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "split_service",
          "event": "noMatch"
        },
        {
          "next": "split_service",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Yes",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.safety}}"
              ],
              "type": "equal_to",
              "value": "Yes"
            }
          ]
        },
        {
          "next": "send_message_webchat_no_service",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to No",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.safety}}"
              ],
              "type": "equal_to",
              "value": "No"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.pre_engagement_data.safety}}",
        "offset": {
          "x": -130,
          "y": 150
        }
      }
    },
    {
      "name": "send_message_webchat_no_service",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 440,
          "y": 450
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${flow_vars.send_message_webchat_no_service}"
      }
    },
    {
      "name": "split_service",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "set_var_vc_service",
          "event": "noMatch"
        },
        {
          "next": "set_var_vc_service",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value starts_with vc_url",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.location}}"
              ],
              "type": "starts_with",
              "value": "${flow_vars.vc_url}"
            }
          ]
        },
        {
          "next": "set_var_dcvh_service",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value starts_with dcvh_url",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.location}}"
              ],
              "type": "starts_with",
              "value": "${flow_vars.dcvh_url}"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.pre_engagement_data.location}}",
        "offset": {
          "x": -150,
          "y": 450
        }
      }
    },
    {
      "name": "set_var_vc_service",
      "type": "set-variables",
      "transitions": [
        {
          "next": "send_message_vc_webchat_prequeue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "type": "string",
            "value": "VC",
            "key": "service"
          }
        ],
        "offset": {
          "x": -220,
          "y": 770
        }
      }
    },
    {
      "name": "set_var_dcvh_service",
      "type": "set-variables",
      "transitions": [
        {
          "next": "send_message_dcvh_webchat_prequeue",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "type": "string",
            "value": "DCVH",
            "key": "service"
          }
        ],
        "offset": {
          "x": 190,
          "y": 770
        }
      }
    },
    {
      "name": "send_message_vc_webchat_prequeue",
      "type": "send-message",
      "transitions": [
        {
          "next": "send_to_queue",
          "event": "sent"
        },
        {
          "next": "send_to_queue",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -280,
          "y": 1060
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${flow_vars.send_message_vc_webchat_prequeue}"
      }
    },
    {
      "name": "send_message_dcvh_webchat_prequeue",
      "type": "send-message",
      "transitions": [
        {
          "next": "send_to_queue",
          "event": "sent"
        },
        {
          "next": "send_to_queue",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 220,
          "y": 1070
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${flow_vars.send_message_dcvh_webchat_prequeue}"
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
})
  }