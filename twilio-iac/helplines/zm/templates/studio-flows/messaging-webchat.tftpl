${
  jsonencode(
    {
  "description": flow_description,
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "pre_survey_complete",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": -240,
          "y": -620
        }
      }
    },
    {
      "name": "split_language",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "set_en_US",
          "event": "noMatch"
        },
        {
          "next": "set_en_US",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to English",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "English"
            }
          ]
        },
        {
          "next": "set_bem",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Bemba",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Bemba"
            }
          ]
        },
        {
          "next": "set_toi",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Tonga",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Tonga"
            }
          ]
        },
        {
          "next": "set_lun",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Lunda",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Lunda"
            }
          ]
        },
        {
          "next": "set_nyz",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Nyanja",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Nyanja"
            }
          ]
        },
        {
          "next": "set_kqn",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Kaonde",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Kaonde"
            }
          ]
        },
        {
          "next": "set_loz",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to Lozi",
              "arguments": [
                "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
              ],
              "type": "equal_to",
              "value": "Lozi"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}",
        "offset": {
          "x": -670,
          "y": -90
        }
      }
    },
    {
      "name": "attributes",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 570,
          "y": -120
        },
        "workflow": workflow_sids["master"],
        "channel": task_channel_sids["chat"],
        "attributes": "{\n  \"ip\": \"{{trigger.message.ChannelAttributes.pre_engagement_data.ip}}\",\n  \"name\": \"{{trigger.message.ChannelAttributes.from}}\",\n  \"channelType\": \"{{trigger.message.ChannelAttributes.channel_type}}\",\n  \"channelSid\": \"{{trigger.message.ChannelSid}}\",\n  \"helpline\": \"{{ trigger.message.ChannelAttributes.memory .helpline}}\",\n  \"ignoreAgent\": \"\",\n  \"transferTargetType\": \"\",\n  \"language\": \"{{trigger.message.ChannelAttributes.pre_engagement_data.language | default: 'en-US' }}\",\n \"memory\": {{ trigger.message.ChannelAttributes.memory | to_json }},\n \"preEngagementData\": {{trigger.message.ChannelAttributes.pre_engagement_data | to_json}} \n}"
      }
    },
    {
      "name": "set_en_US",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "en-US",
            "key": "language"
          }
        ],
        "offset": {
          "x": -1740,
          "y": 380
        }
      }
    },
    {
      "name": "set_bem",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "bem",
            "key": "language"
          }
        ],
        "offset": {
          "x": -1420,
          "y": 380
        }
      }
    },
    {
      "name": "set_toi",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "toi",
            "key": "language"
          }
        ],
        "offset": {
          "x": -1100,
          "y": 380
        }
      }
    },
    {
      "name": "set_lun",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "lun",
            "key": "language"
          }
        ],
        "offset": {
          "x": -770,
          "y": 380
        }
      }
    },
    {
      "name": "set_nyz",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "nyz",
            "key": "language"
          }
        ],
        "offset": {
          "x": -440,
          "y": 380
        }
      }
    },
    {
      "name": "set_kqn",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "kqn",
            "key": "language"
          }
        ],
        "offset": {
          "x": -110,
          "y": 380
        }
      }
    },
    {
      "name": "set_loz",
      "type": "set-variables",
      "transitions": [
        {
          "next": "capture_channel_with_bot",
          "event": "next"
        }
      ],
      "properties": {
        "variables": [
          {
            "value": "loz",
            "key": "language"
          }
        ],
        "offset": {
          "x": 230,
          "y": 380
        }
      }
    },
    {
      "name": "capture_channel_with_bot",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": flow_vars["service_sid"],
        "environment_sid": flow_vars["environment_sid"],
        "offset": {
          "x": -780,
          "y": 650
        },
        "function_sid": flow_vars["capture_channel_with_bot_function_sid"],
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "trigger_pre_survey",
            "key": "message"
          },
          {
            "value": "{{flow.flow_sid}}",
            "key": "studioFlowSid"
          },
          {
            "value": "{{flow.variables.language}}",
            "key": "language"
          },
          {
            "value": "pre_survey",
            "key": "botSuffix"
          },
          {
            "value": "withUserMessage",
            "key": "triggerType"
          },
          {
            "value": "triggerStudioFlow",
            "key": "releaseType"
          },
          {
            "value": "preSurveyComplete",
            "key": "releaseFlag"
          }
        ],
        "url": "${serverless_url}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "pre_survey_complete",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "split_language",
          "event": "noMatch"
        },
        {
          "next": "attributes",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{trigger.message.ChannelAttributes.preSurveyComplete}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.message.ChannelAttributes.preSurveyComplete}}",
        "offset": {
          "x": 20,
          "y": -380
        }
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
}
  )
}