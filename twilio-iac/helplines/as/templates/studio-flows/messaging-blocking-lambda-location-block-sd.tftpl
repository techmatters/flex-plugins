${
  jsonencode({
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "next": "run_subflow_system_down",
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": -160,
          "y": -460
        }
      }
    },
    {
      "name": "f_getProfileFlagsForIdentifier",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "split_based_on_client_flag",
          "event": "success"
        },
        {
          "next": "send_to_queue",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 290,
          "y": 140
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "body": "{ \"trigger\": {{trigger | to_json}}, \"channelType\": \"{% if trigger.conversation.ChannelAttributes.channel_type %}{{trigger.conversation.ChannelAttributes.channel_type}}{% else %}{{trigger.conversation.Source | downcase}}{% endif %}\"}",
        "url": "${get_profile_flags_for_identifier_base_url}/getProfileFlagsForIdentifier"
      }
    },
    {
      "name": "send_message_blocked",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 0,
          "y": 630
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "${flow_vars.widget_from}",
        "to": "{{contact.channel.address}}",
        "body": "${flow_vars.chat_blocked_message}"
      }
    },
    {
      "name": "split_based_on_client_flag",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "send_to_queue",
          "event": "noMatch"
        },
        {
          "next": "send_message_blocked",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value contains blocked",
              "arguments": [
                "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}"
              ],
              "type": "contains",
              "value": "blocked"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}",
        "offset": {
          "x": -50,
          "y": 360
        }
      }
    },
    {
      "name": "send_to_queue",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "next": "http_post_notify_failed_to_enqueue",
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 390,
          "y": 670
        },
        "workflow": "${workflow_sids.master}",
        "channel": "${task_channel_sids.chat}",
        "attributes": "${channel_attributes.default}"
      }
    },
    {
      "name": "http_post_notify_failed_to_enqueue",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 510,
          "y": 930
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"text\": \"Issue detected [Failed to Enqueue] on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
        "url": "${webhook_url_studio_errors}"
      }
    },
    {
      "name": "ipLocationFinder",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "block_contacts",
          "event": "success"
        },
        {
          "next": "f_getProfileFlagsForIdentifier",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 120,
          "y": -290
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"trigger\": {{trigger | to_json}}}",
        "url": "${flow_vars.ip_location_finder_url}"
      }
    },
    {
      "name": "block_contacts",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "send_blocked_location_message",
          "event": "noMatch"
        },
        {
          "next": "f_getProfileFlagsForIdentifier",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value matches_any_of ${channel_flow_vars.allowed_shortcode_locations}",
              "arguments": [
                "{{widgets.ipLocationFinder.parsed.country_code}}"
              ],
              "type": "matches_any_of",
              "value": "${channel_flow_vars.allowed_shortcode_locations}"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.ipLocationFinder.parsed.country_code}}",
        "offset": {
          "x": -560,
          "y": -70
        }
      }
    },
    {
      "name": "send_blocked_location_message",
      "type": "run-function",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "${serverless_service_sid}",
        "environment_sid": "${serverless_environment_sid}",
        "offset": {
          "x": -480,
          "y": 200
        },
        "function_sid": "${flow_vars.send_message_janitor_function_sid}",
        "parameters": [
          {
            "value": "{{flow.channel.address}}",
            "key": "channelSid"
          },
          {
            "value": "${flow_vars.outside_country_message}",
            "key": "message"
          },
          {
            "value": "${flow_vars.widget_from}",
            "key": "from"
          }
        ],
        "url": "${serverless_url}/sendMessageAndRunJanitor"
      }
    },
    {
      "name": "run_subflow_system_down",
      "type": "run-subflow",
      "transitions": [
        {
          "next": "ipLocationFinder",
          "event": "completed"
        },
        {
          "next": "ipLocationFinder",
          "event": "failed"
        }
      ],
      "properties": {
        "flow_sid": "${system_down_studio_subflow_sid}",
        "flow_revision": "LatestPublished",
        "offset": {
          "x": 520,
          "y": -280
        },
        "parameters": [
          {
            "type": "string",
            "value": "true",
            "key": "system_down"
          }
        ]
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  },
  "description": "${flow_description}"
})
  }