{
  "task_routing": {
    "filters": [
      {
        "filter_friendly_name": "Youthline Helpline",
        "expression": "(channelType IN ['voice'] AND to IN [${join(", ", formatlist("'%s'", phone_numbers.youthline))}] AND clinical !='true' AND (transferTargetType =='' OR transferTargetType =='worker')) OR  targetSid=='${task_queues.youthline_helpline}'  OR isContactlessTask == true  ",
        "targets": [
          {
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker' AND worker.sid != task.ignoreAgent)) AND worker.roles HAS 'agent' ) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)",
            "queue": "${task_queues.youthline_helpline}",
            "skip_if": "1==1",
            "priority": 5
          },
          {
            "queue": "${task_queues.youthline_helpline}",
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker')) AND (worker.roles HAS 'supervisor' OR worker.roles HAS 'agent' )  ) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)",
            "priority": 5
          }
        ]
      },
      {
        "filter_friendly_name": "Clinical",
        "expression": "(channelType IN ['voice'] AND ( to IN [${join(", ", formatlist("'%s'", phone_numbers.clinical))}]  OR clinical =='true') AND (transferTargetType =='' OR transferTargetType =='worker')) OR  targetSid=='${task_queues.clinical}' ",
        "targets": [
          {
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker' AND worker.sid != task.ignoreAgent))) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)",
            "queue": "${task_queues.clinical}",
            "skip_if": "1==1",
            "priority": 8
          },
          {
            "queue": "${task_queues.youthline_helpline}",
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker' AND worker.sid != task.ignoreAgent))) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)"
          }
        ]
      },
      {
        "filter_friendly_name": "Priority Youthline Helpline",
        "expression": "targetSid=='${task_queues.priority}'",
        "targets": [
          {
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker' AND worker.sid != task.ignoreAgent))) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)",
            "queue": "${task_queues.priority}",
            "skip_if": "1==1",
            "priority": 10
          },
          {
            "queue": "${task_queues.priority}",
            "expression": "(worker.waitingOfflineContact != true AND ((task.transferTargetType == 'worker' AND task.targetSid == worker.sid) OR (task.transferTargetType != 'worker')) AND (worker.roles HAS 'supervisor' OR worker.roles HAS 'agent' ) ) OR (worker.waitingOfflineContact == true AND task.targetSid == worker.sid AND task.isContactlessTask == true)",
            "priority": 10
          }
        ]
      }
    ]
  }
}
