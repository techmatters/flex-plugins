${
  jsonencode({
  "description": "${flow_description}",
  "states": [
    {
      "name": "Trigger",
      "type": "trigger",
      "transitions": [
        {
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall"
        },
        {
          "next": "pre_survey_complete",
          "event": "incomingConversationMessage"
        },
        {
          "event": "incomingRequest"
        },
        {
          "event": "incomingParent"
        }
      ],
      "properties": {
        "offset": {
          "x": 60,
          "y": -340
        }
      }
    },
    {
      "name": "attributes",
      "type": "send-to-flex",
      "transitions": [
        {
          "event": "callComplete"
        },
        {
          "next": "webhook_notify_failed_to_enqueue",
          "event": "failedToEnqueue"
        },
        {
          "event": "callFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 610,
          "y": 170
        },
        "workflow": "${workflow_sids.master}",
        "channel": "${task_channel_sids.sms}",
        "attributes": "${channel_attributes.default}"
      }
    },
    {
      "name": "webhook_notify_failed_to_enqueue",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 960,
          "y": 550
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"text\": \"Issue detected [Failed to Enqueue] on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
        "url": "${webhook_url_studio_errors}"
      }
    },
    {
      "name": "getProfileFlagsForIdentifier",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "split_contact_routing",
          "event": "success"
        },
        {
          "next": "split_contact_routing",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 210,
          "y": 200
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"trigger\": {{trigger | to_json}}}",
        "url": "${serverless_url}/getProfileFlagsForIdentifier"
      }
    },
    {
      "name": "operatingHours",
      "type": "run-function",
      "transitions": [
        {
          "next": "split_status",
          "event": "success"
        },
        {
          "event": "fail"
        }
      ],
      "properties": {
        "service_sid": "${serverless_service_sid}",
        "environment_sid": "${serverless_environment_sid}",
        "offset": {
          "x": 200,
          "y": 740
        },
        "function_sid": "${flow_vars.operating_hours_function_sid}",
        "parameters": [
          {
            "value": "webchat",
            "key": "channel"
          },
          {
            "value": "true",
            "key": "includeMessageTextInResponse"
          },
          {
            "value": "en-USCH",
            "key": "language"
          }
        ],
        "url": "${serverless_url}/operatingHours"
      }
    },
    {
      "name": "split_status",
      "type": "split-based-on",
      "transitions": [
        {
          "event": "noMatch"
        },
        {
          "next": "send_courage_first_closed_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value matches_any_of closed,holiday",
              "arguments": [
                "{{widgets.operatingHours.parsed.status}}"
              ],
              "type": "matches_any_of",
              "value": "closed,holiday"
            }
          ]
        },
        {
          "next": "get_language_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to open",
              "arguments": [
                "{{widgets.operatingHours.parsed.status}}"
              ],
              "type": "equal_to",
              "value": "open"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.operatingHours.parsed.status}}",
        "offset": {
          "x": -50,
          "y": 1030
        }
      }
    },
    {
      "name": "send_courage_first_closed_message",
      "type": "send-message",
      "transitions": [
        {
          "next": "captureChannelWithBot",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": -20,
          "y": 1350
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "courage_first_closed_message"
      }
    },
    {
      "name": "blocked_client_message",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 660,
          "y": 730
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${flow_vars.blocked_client_message}"
      }
    },
    {
      "name": "split_contact_routing",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "operatingHours",
          "event": "noMatch"
        },
        {
          "next": "blocked_client_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to blocked",
              "arguments": [
                "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}"
              ],
              "type": "equal_to",
              "value": "blocked"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.getProfileFlagsForIdentifier.parsed.flags}}",
        "offset": {
          "x": 290,
          "y": 450
        }
      }
    },
    {
      "name": "pre_survey_complete",
      "type": "split-based-on",
      "transitions": [
        {
          "next": "getProfileFlagsForIdentifier",
          "event": "noMatch"
        },
        {
          "next": "attributes",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to true",
              "arguments": [
                "{{trigger.conversation.ChannelAttributes.preSurveyComplete}}"
              ],
              "type": "equal_to",
              "value": "true"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{trigger.conversation.ChannelAttributes.preSurveyComplete}}",
        "offset": {
          "x": 290,
          "y": -80
        }
      }
    },
    {
      "name": "captureChannelWithBot",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "next": "channelCleanup",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 560,
          "y": 2270
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{\n  \"channelSid\": \"{{flow.channel.address}}\",\n  \"conversationSid\": \"{{flow.channel.address}}\",\n  \"message\": \"trigger_pre_survey\",\n  \"studioFlowSid\": \"{{flow.flow_sid}}\",\n  \"language\": \"en-USCH\",\n  \"botSuffix\": \"pre_survey\",\n  \"triggerType\": \"withUserMessage\",\n  \"releaseType\": \"triggerStudioFlow\",\n  \"releaseFlag\": \"preSurveyComplete\",\n  \"channelType\": \"{% if trigger.conversation.ChannelAttributes.channel_type %}{{trigger.conversation.ChannelAttributes.channel_type}}{% else %}{{trigger.conversation.Source | downcase}}{% endif %}\",\n  \"isConversation\": \"true\"\n}",
        "url": "https://hrm-${environment}.tl.techmatters.org/lambda/twilio/account-scoped/{%if trigger.conversation%}{{trigger.conversation.AccountSid}}{%else%}{{trigger.message.AccountSid}}{%endif%}/channelCapture/captureChannelWithBot"
      }
    },
    {
      "name": "get_language_message",
      "type": "send-and-wait-for-reply",
      "transitions": [
        {
          "next": "split_language",
          "event": "incomingMessage"
        },
        {
          "event": "timeout"
        },
        {
          "event": "deliveryFailure"
        }
      ],
      "properties": {
        "offset": {
          "x": 520,
          "y": 1400
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "body": "${channel_flow_vars.language_message}",
        "timeout": "3600"
      }
    },
    {
      "name": "split_language",
      "type": "split-based-on",
      "transitions": [
        {
           "next": "send_courage_first_eng_language_message",
          "event": "noMatch"
        },
        {
          "next": "send_courage_first_eng_language_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to 1",
              "arguments": [
                "{{widgets.get_language_message.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "1"
            }
          ]
        },
        {
          "next": "send_courage_first_other_message",
          "event": "match",
          "conditions": [
            {
              "friendly_name": "If value equal_to 2",
              "arguments": [
                "{{widgets.get_language_message.inbound.Body}}"
              ],
              "type": "equal_to",
              "value": "2"
            }
          ]
        }
      ],
      "properties": {
        "input": "{{widgets.get_language_message.inbound.Body}}",
        "offset": {
          "x": 450,
          "y": 1680
        }
      }
    },
    {
      "name": "send_courage_first_other_message",
      "type": "send-message",
      "transitions": [
        {
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 820,
          "y": 1950
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${channel_flow_vars.courage_first_other_message}"
      }
    },
    {
      "name": "send_courage_first_eng_language_message",
      "type": "send-message",
      "transitions": [
        {
          "next": "captureChannelWithBot",
          "event": "sent"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 470,
          "y": 1980
        },
        "service": "{{trigger.message.InstanceSid}}",
        "channel": "{{trigger.message.ChannelSid}}",
        "from": "Bot",
        "message_type": "custom",
        "to": "{{contact.channel.address}}",
        "body": "${channel_flow_vars.courage_first_eng_language_message}"
      }
    },
    {
      "name": "channelCleanup",
      "type": "make-http-request",
      "transitions": [
        {
          "next": "webhook_notify_error_chatbot",
          "event": "success"
        },
        {
          "next": "webhook_notify_error_chatbot",
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 710,
          "y": 2490
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{\"channelSid\": \"{{flow.channel.address}}\", \"conversationSid\": \"{{flow.channel.address}}\"}",
        "url": "https://hrm-${environment}.tl.techmatters.org/lambda/twilio/account-scoped/{%if trigger.conversation%}{{trigger.conversation.AccountSid}}{%else%}{{trigger.message.AccountSid}}{%endif%}/channelCapture/chatbotCallbackCleanup"
      }
    },
    {
      "name": "webhook_notify_error_chatbot",
      "type": "make-http-request",
      "transitions": [
        {
          "event": "success"
        },
        {
          "event": "failed"
        }
      ],
      "properties": {
        "offset": {
          "x": 860,
          "y": 2770
        },
        "method": "POST",
        "content_type": "application/json;charset=utf-8",
        "add_twilio_auth": false,
        "body": "{ \"text\": \"Issue detected [Chabot Failure] on ${short_helpline} ${short_environment} Flow SID: {{flow.flow_sid}} Execution SID: {{flow.sid}}  \" }",
        "url": "${webhook_url_studio_errors}"
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  }
})}