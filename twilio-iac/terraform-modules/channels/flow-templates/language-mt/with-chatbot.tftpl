${
  jsonencode(
    {
      "description": flow_description,
      "states": [
        {
          "name": "Trigger",
          "type": "trigger",
          "transitions": [
            {
              "next": "split_web",
              "event": "incomingMessage"
            },
            {
              "event": "incomingCall"
            },
            {
              "event": "incomingConversationMessage"
            },
            {
              "event": "incomingRequest"
            },
            {
              "event": "incomingParent"
            }
          ],
          "properties": {
            "offset": {
              "x": -90,
              "y": -90
            }
          }
        },
        {
          "name": "attributes",
          "type": "send-to-flex",
          "transitions": [
            {
              "event": "callComplete"
            },
            {
              "event": "failedToEnqueue"
            },
            {
              "event": "callFailure"
            }
          ],
          "properties": {
            "offset": {
              "x": 170,
              "y": 2000
            },
            "workflow": master_workflow_sid,
            "channel": chat_task_channel_sid,
            "attributes": channel_attributes
          }
        },
        {
          "name": "language_split",
          "type": "split-based-on",
          "transitions": [
            {
              "next": "chatbot_EN",
              "event": "noMatch"
            },
            {
              "next": "chatbot_EN",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to en-MT",
                  "arguments": [
                    "{{widgets.chatbot_language.memory.twilio.collected_data.collect_survey.answers.language.answer}}"
                  ],
                  "type": "equal_to",
                  "value": "en-MT"
                }
              ]
            },
            {
              "next": "chatbot_MT",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to mt-MT",
                  "arguments": [
                    "{{widgets.chatbot_language.memory.twilio.collected_data.collect_survey.answers.language.answer}}"
                  ],
                  "type": "equal_to",
                  "value": "mt-MT"
                }
              ]
            },
            {
              "next": "chatbot_UKR",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to ukr-MT",
                  "arguments": [
                    "{{widgets.chatbot_language.memory.twilio.collected_data.collect_survey.answers.language.answer}}"
                  ],
                  "type": "equal_to",
                  "value": "ukr-MT"
                }
              ]
            }
          ],
          "properties": {
            "input": "{{widgets.chatbot_language.memory.twilio.collected_data.collect_survey.answers.language.answer}}",
            "offset": {
              "x": -160,
              "y": 690
            }
          }
        },
        {
          "name": "chatbot_EN",
          "type": "send-to-auto-pilot",
          "transitions": [
            {
              "next": "set_variables_EN",
              "event": "sessionEnded"
            },
            {
              "event": "failure"
            },
            {
              "event": "timeout"
            }
          ],
          "properties": {
            "chat_channel": "{{trigger.message.ChannelSid}}",
            "offset": {
              "x": -520,
              "y": 1030
            },
            "autopilot_assistant_sid": chatbot_en_sid,
            "from": "{{flow.channel.address}}",
            "chat_service": "{{trigger.message.InstanceSid}}",
            "body": "{{trigger.message.Body}}",
            "target_task": "greeting",
            "timeout": 14400
          }
        },
        {
          "name": "chatbot_MT",
          "type": "send-to-auto-pilot",
          "transitions": [
            {
              "next": "set_variables_MT",
              "event": "sessionEnded"
            },
            {
              "event": "failure"
            },
            {
              "event": "timeout"
            }
          ],
          "properties": {
            "chat_channel": "{{trigger.message.ChannelSid}}",
            "offset": {
              "x": -70,
              "y": 1030
            },
            "autopilot_assistant_sid": chatbot_mt_sid,
            "from": "{{flow.channel.address}}",
            "chat_service": "{{trigger.message.InstanceSid}}",
            "body": "{{trigger.message.Body}}",
            "target_task": "greeting",
            "timeout": 14400
          }
        },
        {
          "name": "chatbot_UKR",
          "type": "send-to-auto-pilot",
          "transitions": [
            {
              "next": "set_variables_UKR",
              "event": "sessionEnded"
            },
            {
              "event": "failure"
            },
            {
              "event": "timeout"
            }
          ],
          "properties": {
            "chat_channel": "{{trigger.message.ChannelSid}}",
            "offset": {
              "x": 360,
              "y": 1020
            },
            "autopilot_assistant_sid": chatbot_ukr_sid,
            "from": "{{flow.channel.address}}",
            "chat_service": "{{trigger.message.InstanceSid}}",
            "body": "{{trigger.message.Body}}",
            "target_task": "greeting",
            "timeout": 14400
          }
        },
        {
          "name": "set_variables_EN",
          "type": "set-variables",
          "transitions": [
            {
              "next": "check_counselor_handoff",
              "event": "next"
            }
          ],
          "properties": {
            "variables": [
              {
                "value": "{{widgets.chatbot_EN.memory}}",
                "key": "chatbot_memory"
              },
              {
                "value": "{{widgets.chatbot_EN.CurrentTask}}",
                "key": "chatbot_current_task"
              }
            ],
            "offset": {
              "x": -500,
              "y": 1310
            }
          }
        },
        {
          "name": "set_variables_MT",
          "type": "set-variables",
          "transitions": [
            {
              "next": "check_counselor_handoff",
              "event": "next"
            }
          ],
          "properties": {
            "variables": [
              {
                "value": "{{widgets.chatbot_MT.memory}}",
                "key": "chatbot_memory"
              },
              {
                "value": "{{widgets.chatbot_MT.CurrentTask}}",
                "key": "chatbot_current_task"
              }
            ],
            "offset": {
              "x": -40,
              "y": 1310
            }
          }
        },
        {
          "name": "set_variables_UKR",
          "type": "set-variables",
          "transitions": [
            {
              "next": "check_counselor_handoff",
              "event": "next"
            }
          ],
          "properties": {
            "variables": [
              {
                "value": "{{widgets.chatbot_UKR.memory}}",
                "key": "chatbot_memory"
              },
              {
                "value": "{{widgets.chatbot_UKR.CurrentTask}}",
                "key": "chatbot_current_task"
              }
            ],
            "offset": {
              "x": 440,
              "y": 1290
            }
          }
        },
        {
          "name": "check_counselor_handoff",
          "type": "split-based-on",
          "transitions": [
            {
              "event": "noMatch"
            },
            {
              "next": "attributes",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to counselor_handoff",
                  "arguments": [
                    "{{flow.variables.chatbot_current_task}}"
                  ],
                  "type": "equal_to",
                  "value": "counselor_handoff"
                }
              ]
            }
          ],
          "properties": {
            "input": "{{flow.variables.chatbot_current_task}}",
            "offset": {
              "x": -10,
              "y": 1690
            }
          }
        },
        {
          "name": "chatbot_language",
          "type": "send-to-auto-pilot",
          "transitions": [
            {
              "next": "language_split",
              "event": "sessionEnded"
            },
            {
              "event": "failure"
            },
            {
              "event": "timeout"
            }
          ],
          "properties": {
            "chat_channel": "{{trigger.message.ChannelSid}}",
            "offset": {
              "x": -210,
              "y": 440
            },
            "autopilot_assistant_sid": chatbot_language_selector_sid,
            "from": "{{flow.channel.address}}",
            "chat_service": "{{trigger.message.InstanceSid}}",
            "body": "{{trigger.message.Body}}",
            "target_task": "greeting",
            "timeout": 14400
          }
        },
        {
          "name": "split_web",
          "type": "split-based-on",
          "transitions": [
            {
              "next": "chatbot_language",
              "event": "noMatch"
            },
            {
              "next": "web_language_split",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to web",
                  "arguments": [
                    "{{trigger.message.ChannelAttributes.channel_type}}"
                  ],
                  "type": "equal_to",
                  "value": "web"
                }
              ]
            }
          ],
          "properties": {
            "input": "{{trigger.message.ChannelAttributes.channel_type}}",
            "offset": {
              "x": 230,
              "y": 140
            }
          }
        },
        {
          "name": "web_language_split",
          "type": "split-based-on",
          "transitions": [
            {
              "next": "chatbot_EN",
              "event": "noMatch"
            },
            {
              "next": "chatbot_EN",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to en-MT",
                  "arguments": [
                    "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
                  ],
                  "type": "equal_to",
                  "value": "en-MT"
                }
              ]
            },
            {
              "next": "chatbot_MT",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to mt-MT",
                  "arguments": [
                    "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
                  ],
                  "type": "equal_to",
                  "value": "mt-MT"
                }
              ]
            },
            {
              "next": "chatbot_UKR",
              "event": "match",
              "conditions": [
                {
                  "friendly_name": "If value equal_to ukr-MT",
                  "arguments": [
                    "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}"
                  ],
                  "type": "equal_to",
                  "value": "ukr-MT"
                }
              ]
            }
          ],
          "properties": {
            "input": "{{trigger.message.ChannelAttributes.pre_engagement_data.language}}",
            "offset": {
              "x": 470,
              "y": 670
            }
          }
        }
      ],
      "initial_state": "Trigger",
      "flags": {
        "allow_concurrent_calls": true
      }
    }
  )
  }
